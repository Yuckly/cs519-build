{"ast":null,"code":"var _jsxFileName = \"/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/GradeTable.tsx\";\n/**\n * You might find it useful to have some dummy data for your own testing.\n * Feel free to write this function if you find that feature desirable.\n * \n * When you come to office hours for help, we will ask you if you have written\n * this function and tested your project using it.\n */\n\nexport function dummyData() {\n  return [];\n}\n\n/**\n * This is the component where you should write the code for displaying the\n * the table of grades.\n *\n * You might need to change the signature of this function.\n *\n */\n\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nexport default function GradeTable() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n// export const GradeTable = () => {\n//   return (\n//     <Box sx={{ height: 400, width: '100%' }}>\n//       <DataGrid\n//         rows={rows}\n//         columns={columns}\n//         initialState={{\n//           pagination: {\n//             pagination: {\n//               page: 0\n//               pageSize: 5,\n//             },\n//           },\n//         }}\n//         pageSizeOptions={[5]}\n//         checkboxSelection\n//         disableRowSelectionOnClick\n//       />\n//     </Box>\n//   );\n// }\n_c = GradeTable;\nvar _c;\n$RefreshReg$(_c, \"GradeTable\");","map":{"version":3,"names":["dummyData","React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","calories","fat","carbs","protein","rows","GradeTable","minWidth","map","row","border"],"sources":["/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/GradeTable.tsx"],"sourcesContent":["/**\n * You might find it useful to have some dummy data for your own testing.\n * Feel free to write this function if you find that feature desirable.\n * \n * When you come to office hours for help, we will ask you if you have written\n * this function and tested your project using it.\n */\nimport Box from '@mui/material/Box';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nexport function dummyData() {\n  return [];\n}\n\n/**\n * This is the component where you should write the code for displaying the\n * the table of grades.\n *\n * You might need to change the signature of this function.\n *\n */\n\n\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction createData(\n  name: string,\n  calories: number,\n  fat: number,\n  carbs: number,\n  protein: number,\n) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function GradeTable() {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\n// export const GradeTable = () => {\n//   return (\n//     <Box sx={{ height: 400, width: '100%' }}>\n//       <DataGrid\n//         rows={rows}\n//         columns={columns}\n//         initialState={{\n//           pagination: {\n//             pagination: {\n//               page: 0\n//               pageSize: 5,\n//             },\n//           },\n//         }}\n//         pageSizeOptions={[5]}\n//         checkboxSelection\n//         disableRowSelectionOnClick\n//       />\n//     </Box>\n//   );\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}