{"ast":null,"code":"var _jsxFileName = \"/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/Test.tsx\";\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"studentID\",\n  headerName: \"Student ID\"\n}, {\n  field: \"studentName\",\n  headerName: \"Student Name\",\n  width: 150\n}, {\n  field: \"classID\",\n  headerName: \"Class ID\"\n}, {\n  field: \"className\",\n  headerName: \"Class Name\"\n}, {\n  field: \"semester\",\n  headerName: \"Semester\"\n}, {\n  field: \"finalGrade\",\n  headerName: \"Final Grade\"\n}];\nexport const Test = _ref => {\n  let {\n    studentDetails,\n    classTitleId\n  } = _ref;\n  // const [studentDetail, setStudentDetail] = useState<IStudentDetail[][]>([]);\n  // setStudentDetail(studentDetails)\n  const classTitle = classTitleId[0];\n  const classId = classTitleId[1];\n  const rows = studentDetails.map((studentArray, index) => {\n    const student = studentArray[0];\n    //console.log(student);\n    return {\n      id: index,\n      studentID: student.universityId,\n      studentName: student.name,\n      classID: classId,\n      className: classTitle,\n      semester: \"fall2022\",\n      finalGrade: \"Unknown\"\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","Box","DataGrid","columns","field","headerName","width","Test","studentDetails","classTitleId","classTitle","classId","rows","map","studentArray","index","student","id","studentID","universityId","studentName","name","classID","className","semester","finalGrade","height"],"sources":["/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/Test.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { IStudentDetail } from \"../types/api_types\";\n\ninterface TestProps {\n  studentDetails: IStudentDetail[][];\n  classTitleId: string[];\n}\n\nconst columns: GridColDef[] = [\n  {\n    field: \"studentID\",\n    headerName: \"Student ID\",\n  },\n  {\n    field: \"studentName\",\n    headerName: \"Student Name\",\n    width: 150,\n  },\n  {\n    field: \"classID\",\n    headerName: \"Class ID\",\n  },\n  {\n    field: \"className\",\n    headerName: \"Class Name\",\n  },\n  {\n    field: \"semester\",\n    headerName: \"Semester\",\n  },\n  {\n    field: \"finalGrade\",\n    headerName: \"Final Grade\",\n  },\n];\n\nexport const Test = ({ studentDetails,classTitleId }: TestProps) => {\n  // const [studentDetail, setStudentDetail] = useState<IStudentDetail[][]>([]);\n  // setStudentDetail(studentDetails)\n  const classTitle = classTitleId[0];\n  const classId = classTitleId[1];\n\n  const rows = studentDetails.map((studentArray, index) => {\n    const student = studentArray[0];\n    //console.log(student);\n    return {\n      id: index,\n      studentID: student.universityId,\n      studentName: student.name,\n      classID: classId,\n      className: classTitle,\n      semester: \"fall2022\", \n      finalGrade: \"Unknown\",\n    };\n  });\n  return (\n    <Box sx={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n      />\n    </Box>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAoB,kBAAkB;AAAC;AAQxD,MAAMC,OAAqB,GAAG,CAC5B;EACEC,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,cAAc;EAC1BC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,YAAY;EACnBC,UAAU,EAAE;AACd,CAAC,CACF;AAED,OAAO,MAAME,IAAI,GAAG,QAAgD;EAAA,IAA/C;IAAEC,cAAc;IAACC;EAAwB,CAAC;EAC7D;EACA;EACA,MAAMC,UAAU,GAAGD,YAAY,CAAC,CAAC,CAAC;EAClC,MAAME,OAAO,GAAGF,YAAY,CAAC,CAAC,CAAC;EAE/B,MAAMG,IAAI,GAAGJ,cAAc,CAACK,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,KAAK;IACvD,MAAMC,OAAO,GAAGF,YAAY,CAAC,CAAC,CAAC;IAC/B;IACA,OAAO;MACLG,EAAE,EAAEF,KAAK;MACTG,SAAS,EAAEF,OAAO,CAACG,YAAY;MAC/BC,WAAW,EAAEJ,OAAO,CAACK,IAAI;MACzBC,OAAO,EAAEX,OAAO;MAChBY,SAAS,EAAEb,UAAU;MACrBc,QAAQ,EAAE,UAAU;MACpBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC,CAAC;EACF,oBACE,QAAC,GAAG;IAAC,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEpB,KAAK,EAAE;IAAO,CAAE;IAAA,uBACtC,QAAC,QAAQ;MACP,IAAI,EAAEM,IAAK;MACX,OAAO,EAAET,OAAQ;MACjB,QAAQ,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA;EACb;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KA5BWI,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}