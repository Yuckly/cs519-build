{"ast":null,"code":"var _jsxFileName = \"/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/Test.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { MY_BU_ID, BASE_API_URL, GET_DEFAULT_HEADERS } from \"../globals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'studentID',\n  headerName: 'Student ID'\n}, {\n  field: 'studentName',\n  headerName: 'Student Name',\n  width: 150\n}, {\n  field: 'classID',\n  headerName: 'Class ID'\n}, {\n  field: 'className',\n  headerName: 'Class Name'\n}, {\n  field: 'semester',\n  headerName: 'Semester'\n}, {\n  field: 'finalGrade',\n  headerName: 'Final Grade'\n}];\nexport const Test = _ref => {\n  _s();\n  let {\n    selectedClassId\n  } = _ref;\n  const [studentList, setStudentList] = useState([]);\n  const fetchStudents = async classId => {\n    try {\n      const response = await fetch(`${BASE_API_URL}/class/listStudents/${classId}?buid=${MY_BU_ID}`, {\n        method: \"GET\",\n        headers: GET_DEFAULT_HEADERS()\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const studentsData = await response.json();\n      console.log(studentsData);\n      setStudentList(studentsData);\n    } catch (error) {\n      console.error(\"Failed to fetch students enrolled in class:\", error);\n    }\n  };\n  const [row, setRow] = useState();\n  let className,\n    classID = selectedClassId;\n  console.log(className, classID);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: [{\n        id: 1,\n        studentID: \"a\",\n        studentName: \"a\",\n        classID: \"a\",\n        className: \"a\",\n        semester: \"fall2022\",\n        finalGrade: \"a\"\n      }],\n      columns: columns,\n      pageSize: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"Xh7FDMX9FmLe+XBfmQGrRT+uOAo=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","Box","DataGrid","MY_BU_ID","BASE_API_URL","GET_DEFAULT_HEADERS","columns","field","headerName","width","Test","selectedClassId","studentList","setStudentList","fetchStudents","classId","response","fetch","method","headers","ok","Error","status","studentsData","json","console","log","error","row","setRow","className","classID","height","id","studentID","studentName","semester","finalGrade"],"sources":["/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/Test.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport { MY_BU_ID, BASE_API_URL, GET_DEFAULT_HEADERS } from \"../globals\";\n\ninterface TestProps {\n  selectedClassId: string[];\n}\n\n\nconst columns: GridColDef[] = [\n  {\n    field: 'studentID',\n    headerName: 'Student ID'\n  },\n  {\n    field: 'studentName',\n    headerName: 'Student Name',\n    width: 150\n  },\n  {\n    field: 'classID',\n    headerName: 'Class ID'\n  },\n  {\n    field: 'className',\n    headerName: 'Class Name'\n  },\n  {\n    field: 'semester',\n    headerName: 'Semester'\n  },\n  {\n    field: 'finalGrade',\n    headerName: 'Final Grade'\n  },\n\n];\n\n\nexport const Test = ({selectedClassId}: TestProps) => {\n  const [studentList, setStudentList] = useState([]);\n\nconst fetchStudents = async (classId: string) => {\n  try {\n    const response = await fetch(\n      `${BASE_API_URL}/class/listStudents/${classId}?buid=${MY_BU_ID}`,\n      {\n        method: \"GET\",\n        headers: GET_DEFAULT_HEADERS(),\n      }\n    );\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n    const studentsData = await response.json();\n    console.log(studentsData);\n    setStudentList(studentsData);\n  } catch (error) {\n    console.error(\"Failed to fetch students enrolled in class:\", error);\n  }\n};\n\n  const [row, setRow] = useState();\n  let className, classID = selectedClassId;\n  console.log(className, classID);\n  return (\n    <Box sx={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={[{id:1,studentID:\"a\", studentName: \"a\", classID:\"a\",className:\"a\",semester:\"fall2022\",finalGrade:\"a\"}]}\n        columns={columns}\n        pageSize={5}\n      />\n    </Box>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAoB,kBAAkB;AACvD,SAASC,QAAQ,EAAEC,YAAY,EAAEC,mBAAmB,QAAQ,YAAY;AAAC;AAOzE,MAAMC,OAAqB,GAAG,CAC5B;EACEC,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,cAAc;EAC1BC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,YAAY;EACnBC,UAAU,EAAE;AACd,CAAC,CAEF;AAGD,OAAO,MAAME,IAAI,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAACC;EAA0B,CAAC;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMc,aAAa,GAAG,MAAOC,OAAe,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEb,YAAa,uBAAsBW,OAAQ,SAAQZ,QAAS,EAAC,EAChE;QACEe,MAAM,EAAE,KAAK;QACbC,OAAO,EAAEd,mBAAmB;MAC9B,CAAC,CACF;MACD,IAAI,CAACW,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,UAASL,QAAQ,CAACM,MAAO,EAAC,CAAC;MAC9C;MACA,MAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MAC1CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;MACzBV,cAAc,CAACU,YAAY,CAAC;IAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE;EACF,CAAC;EAEC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAG7B,QAAQ,EAAE;EAChC,IAAI8B,SAAS;IAAEC,OAAO,GAAGpB,eAAe;EACxCc,OAAO,CAACC,GAAG,CAACI,SAAS,EAAEC,OAAO,CAAC;EAC/B,oBACE,QAAC,GAAG;IAAC,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEvB,KAAK,EAAE;IAAO,CAAE;IAAA,uBACtC,QAAC,QAAQ;MACP,IAAI,EAAE,CAAC;QAACwB,EAAE,EAAC,CAAC;QAACC,SAAS,EAAC,GAAG;QAAEC,WAAW,EAAE,GAAG;QAAEJ,OAAO,EAAC,GAAG;QAACD,SAAS,EAAC,GAAG;QAACM,QAAQ,EAAC,UAAU;QAACC,UAAU,EAAC;MAAG,CAAC,CAAE;MAC7G,OAAO,EAAE/B,OAAQ;MACjB,QAAQ,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA;EACZ;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAnCWI,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}