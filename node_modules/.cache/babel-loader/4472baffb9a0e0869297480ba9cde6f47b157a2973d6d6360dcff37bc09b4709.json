{"ast":null,"code":"var _jsxFileName = \"/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/Test.tsx\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"studentID\",\n  headerName: \"Student ID\"\n}, {\n  field: \"studentName\",\n  headerName: \"Student Name\",\n  width: 150\n}, {\n  field: \"classID\",\n  headerName: \"Class ID\"\n}, {\n  field: \"className\",\n  headerName: \"Class Name\"\n}, {\n  field: \"semester\",\n  headerName: \"Semester\"\n}, {\n  field: \"finalGrade\",\n  headerName: \"Final Grade\"\n}];\nexport const Test = _ref => {\n  let {\n    studentDetails,\n    classTitleId\n  } = _ref;\n  const classTitle = classTitleId[0];\n  const classId = classTitleId[1];\n  console.log(studentDetails);\n  const rows = studentDetails.map((student, index) => {\n    if (Array.isArray(student)) {\n      const s = student[0];\n      return {\n        id: index,\n        studentID: s.universityId,\n        studentName: s.name,\n        classID: classId,\n        className: classTitle,\n        semester: \"fall2022\",\n        finalGrade: \"Unknown\"\n      };\n    } else {\n      return {\n        id: index,\n        studentID: \"loading...\",\n        studentName: \"loading...\",\n        classID: classId,\n        className: classTitle,\n        semester: \"fall2022\",\n        finalGrade: \"Unknown\"\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["Box","DataGrid","columns","field","headerName","width","Test","studentDetails","classTitleId","classTitle","classId","console","log","rows","map","student","index","Array","isArray","s","id","studentID","universityId","studentName","name","classID","className","semester","finalGrade","height"],"sources":["/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/components/Test.tsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { IStudentDetail } from \"../types/api_types\";\n\ninterface TestProps {\n  studentDetails: IStudentDetail[];\n  classTitleId: string[];\n}\n\nconst columns: GridColDef[] = [\n  {\n    field: \"studentID\",\n    headerName: \"Student ID\",\n  },\n  {\n    field: \"studentName\",\n    headerName: \"Student Name\",\n    width: 150,\n  },\n  {\n    field: \"classID\",\n    headerName: \"Class ID\",\n  },\n  {\n    field: \"className\",\n    headerName: \"Class Name\",\n  },\n  {\n    field: \"semester\",\n    headerName: \"Semester\",\n  },\n  {\n    field: \"finalGrade\",\n    headerName: \"Final Grade\",\n  },\n];\n\nexport const Test = ({ studentDetails, classTitleId }: TestProps) => {\n  const classTitle = classTitleId[0];\n  const classId = classTitleId[1];\n  console.log(studentDetails);\n  const rows = studentDetails.map((student, index) => {\n    if (Array.isArray(student)) {\n      const s = student[0];\n      return {\n        id: index,\n        studentID: s.universityId,\n        studentName: s.name,\n        classID: classId,\n        className: classTitle,\n        semester: \"fall2022\",\n        finalGrade: \"Unknown\",\n      };\n    } else {\n      return {\n        id: index,\n        studentID: \"loading...\",\n        studentName: \"loading...\",\n        classID: classId,\n        className: classTitle,\n        semester: \"fall2022\",\n        finalGrade: \"Unknown\",\n      };\n    }\n    \n    \n  });\n  return (\n    <Box sx={{ height: 400, width: \"100%\" }}>\n      <DataGrid rows={rows} columns={columns} pageSize={10} />\n    </Box>\n  );\n};\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAoB,kBAAkB;AAAC;AAQxD,MAAMC,OAAqB,GAAG,CAC5B;EACEC,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,aAAa;EACpBC,UAAU,EAAE,cAAc;EAC1BC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE;AACd,CAAC,EACD;EACED,KAAK,EAAE,YAAY;EACnBC,UAAU,EAAE;AACd,CAAC,CACF;AAED,OAAO,MAAME,IAAI,GAAG,QAAiD;EAAA,IAAhD;IAAEC,cAAc;IAAEC;EAAwB,CAAC;EAC9D,MAAMC,UAAU,GAAGD,YAAY,CAAC,CAAC,CAAC;EAClC,MAAME,OAAO,GAAGF,YAAY,CAAC,CAAC,CAAC;EAC/BG,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAC3B,MAAMM,IAAI,GAAGN,cAAc,CAACO,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAClD,IAAIC,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,EAAE;MAC1B,MAAMI,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC;MACpB,OAAO;QACLK,EAAE,EAAEJ,KAAK;QACTK,SAAS,EAAEF,CAAC,CAACG,YAAY;QACzBC,WAAW,EAAEJ,CAAC,CAACK,IAAI;QACnBC,OAAO,EAAEf,OAAO;QAChBgB,SAAS,EAAEjB,UAAU;QACrBkB,QAAQ,EAAE,UAAU;QACpBC,UAAU,EAAE;MACd,CAAC;IACH,CAAC,MAAM;MACL,OAAO;QACLR,EAAE,EAAEJ,KAAK;QACTK,SAAS,EAAE,YAAY;QACvBE,WAAW,EAAE,YAAY;QACzBE,OAAO,EAAEf,OAAO;QAChBgB,SAAS,EAAEjB,UAAU;QACrBkB,QAAQ,EAAE,UAAU;QACpBC,UAAU,EAAE;MACd,CAAC;IACH;EAGF,CAAC,CAAC;EACF,oBACE,QAAC,GAAG;IAAC,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAExB,KAAK,EAAE;IAAO,CAAE;IAAA,uBACtC,QAAC,QAAQ;MAAC,IAAI,EAAEQ,IAAK;MAAC,OAAO,EAAEX,OAAQ;MAAC,QAAQ,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACpD;AAEV,CAAC;AAAC,KAnCWI,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}