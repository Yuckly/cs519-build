{"ast":null,"code":"var _jsxFileName = \"/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport { Select, Typography } from \"@mui/material\";\n/**\n * You will find globals from this file useful!\n */\nimport { BASE_API_URL, GET_DEFAULT_HEADERS } from \"./globals\";\nimport Test from \"./components/Test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // You will need to use more of these!\n  const [currClassId, setCurrClassId] = useState(\"\");\n  const [classList, setClassList] = useState([]);\n\n  /**\n   * This is JUST an example of how you might fetch some data(with a different API).\n   * As you might notice, this does not show up in your console right now.\n   * This is because the function isn't called by anything!\n   *\n   * You will need to lookup how to fetch data from an API using React.js\n   * Something you might want to look at is the useEffect hook.\n   *\n   * The useEffect hook will be useful for populating the data in the dropdown box.\n   * You will want to make sure that the effect is only called once at component mount.\n   *\n   * You will also need to explore the use of async/await.\n   *\n   */\n  const fetchSomeData = async () => {\n    const res = await fetch(`${BASE_API_URL}/class/listBySemester/spring2023?buid=1`, {\n      method: 'GET',\n      headers: GET_DEFAULT_HEADERS()\n    });\n    const json = await res.json();\n    console.log(json);\n  };\n  fetchSomeData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        padding: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          gutterBottom: true,\n          children: \"Spark Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Select a class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            label: \"Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Final Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ep2hBdxcpZAIRqRkUpeVMyEneAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Grid","Select","Typography","BASE_API_URL","GET_DEFAULT_HEADERS","Test","App","currClassId","setCurrClassId","classList","setClassList","fetchSomeData","res","fetch","method","headers","json","console","log","width","height","padding"],"sources":["/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport { Select, Typography } from \"@mui/material\";\n/**\n * You will find globals from this file useful!\n */\nimport { MY_BU_ID, BASE_API_URL, TOKEN, GET_DEFAULT_HEADERS } from \"./globals\";\nimport { IUniversityClass } from \"./types/api_types\";\n\nimport Test from \"./components/Test\";\n\nfunction App() {\n  // You will need to use more of these!\n  const [currClassId, setCurrClassId] = useState<string>(\"\");\n  const [classList, setClassList] = useState<IUniversityClass[]>([]);\n\n  /**\n   * This is JUST an example of how you might fetch some data(with a different API).\n   * As you might notice, this does not show up in your console right now.\n   * This is because the function isn't called by anything!\n   *\n   * You will need to lookup how to fetch data from an API using React.js\n   * Something you might want to look at is the useEffect hook.\n   *\n   * The useEffect hook will be useful for populating the data in the dropdown box.\n   * You will want to make sure that the effect is only called once at component mount.\n   *\n   * You will also need to explore the use of async/await.\n   *\n   */\n  const fetchSomeData = async () => {\n    const res = await fetch(`${BASE_API_URL}/class/listBySemester/spring2023?buid=1`, {\n      method: 'GET',\n      headers: GET_DEFAULT_HEADERS()\n    })\n    const json = await res.json();\n    console.log(json);\n  };\n  fetchSomeData();\n  return (\n    \n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <Grid container spacing={2} style={{ padding: \"1rem\" }}>\n        <Grid xs={12} container alignItems=\"center\" justifyContent=\"center\">\n          <Typography variant=\"h2\" gutterBottom>\n            Spark Assessment\n          </Typography>\n        </Grid>\n        <Grid xs={12} md={4}>\n          <Typography variant=\"h4\" gutterBottom>\n            Select a class\n          </Typography>\n          <div style={{ width: \"100%\" }}>\n            <Select fullWidth={true} label=\"Class\">\n              {/* You'll need to place some code here to generate the list of items in the selection */}\n            </Select>\n          </div>\n        </Grid>\n        <Grid xs={12} md={8}>\n          <Typography variant=\"h4\" gutterBottom>\n            Final Grades\n          </Typography>\n          <div><Test></Test></div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClD;AACA;AACA;AACA,SAAmBC,YAAY,EAASC,mBAAmB,QAAQ,WAAW;AAG9E,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAqB,EAAE,CAAC;;EAElE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMY,aAAa,GAAG,YAAY;IAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEV,YAAa,yCAAwC,EAAE;MAChFW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEX,mBAAmB;IAC9B,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,EAAE;IAC7BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC;EACDL,aAAa,EAAE;EACf,oBAEE;IAAK,KAAK,EAAE;MAAEQ,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAA,uBAC9C,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAA,wBACrD,QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,SAAS;QAAC,UAAU,EAAC,QAAQ;QAAC,cAAc,EAAC,QAAQ;QAAA,uBACjE,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAC,YAAY;UAAA,UAAC;QAEtC;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,QACR,eACP,QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,wBAClB,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAC,YAAY;UAAA,UAAC;QAEtC;UAAA;UAAA;UAAA;QAAA,QAAa,eACb;UAAK,KAAK,EAAE;YAAEF,KAAK,EAAE;UAAO,CAAE;UAAA,uBAC5B,QAAC,MAAM;YAAC,SAAS,EAAE,IAAK;YAAC,KAAK,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA;QAE7B;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QACD,eACP,QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,wBAClB,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAC,YAAY;UAAA,UAAC;QAEtC;UAAA;UAAA;UAAA;QAAA,QAAa,eACb;UAAA,uBAAK,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAxDQb,GAAG;AAAA,KAAHA,GAAG;AA0DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}