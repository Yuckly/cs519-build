{"ast":null,"code":"var _jsxFileName = \"/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport { MenuItem, Select, Typography } from \"@mui/material\";\n/**\n * You will find globals from this file useful!\n */\nimport { MY_BU_ID, BASE_API_URL, GET_DEFAULT_HEADERS } from \"./globals\";\nimport { Test } from \"./components/Test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // You will need to use more of these!\n  const [currClassId, setCurrClassId] = useState(\"\");\n  const [currClassTitle, setCurrClassTitle] = useState(\"\");\n  const [classList, setClassList] = useState([]);\n  const [classTitlesId, setClassTitlesId] = useState([]);\n  const [studentList, setStudentList] = useState([]);\n  /**\n   * This is JUST an example of how you might fetch some data(with a different API).\n   * As you might notice, this does not show up in your console right now.\n   * This is because the function isn't called by anything!\n   *\n   * You will need to lookup how to fetch data from an API using React.js\n   * Something you might want to look at is the useEffect hook.\n   *\n   * The useEffect hook will be useful for populating the data in the dropdown box.\n   * You will want to make sure that the effect is only called once at component mount.\n   *\n   * You will also need to explore the use of async/await.\n   *\n   */\n\n  const fetchClasses = async () => {\n    try {\n      const res = await fetch(`${BASE_API_URL}/class/listBySemester/fall2022?buid=${MY_BU_ID}`, {\n        method: \"GET\",\n        headers: GET_DEFAULT_HEADERS()\n      });\n      if (!res.ok) {\n        throw new Error(`Error: ${res.status}`);\n      }\n      const classes = await res.json();\n      const transformedClasses = classes.map(item => ({\n        classId: item.classId,\n        title: item.title\n      }));\n      setClassTitlesId(transformedClasses);\n    } catch (error) {\n      console.error(\"Failed to fetch class data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n  useEffect(() => {\n    if (currClassId) {\n      fetchStudents(currClassId);\n    }\n  }, [currClassId]);\n  const fetchStudents = async classId => {\n    try {\n      const response = await fetch(`${BASE_API_URL}/class/listStudents/${classId}?buid=${MY_BU_ID}`, {\n        method: \"GET\",\n        headers: GET_DEFAULT_HEADERS()\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const students = await response.json();\n      const studentDetailsPromises = students.map(student => fetchStudentDetails(student));\n      const studentDetails = await Promise.all(studentDetailsPromises);\n      setStudentList(studentDetails.filter(detail => detail !== null));\n    } catch (error) {\n      console.error(\"Failed to fetch students enrolled in class:\", error);\n    }\n  };\n  const fetchStudentDetails = async studentId => {\n    try {\n      const response = await fetch(`${BASE_API_URL}/student/GetById/${studentId}?buid=${MY_BU_ID}`, {\n        method: \"GET\",\n        headers: GET_DEFAULT_HEADERS()\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const studentDetails = await response.json();\n      return studentDetails;\n    } catch (error) {\n      console.error(\"Failed to fetch student information:\", error);\n      return null;\n    }\n  };\n  const handleClassChange = async newClassId => {\n    setCurrClassId(newClassId);\n    const selectedClass = classTitlesId.find(classItem => classItem.classId === newClassId);\n    if (selectedClass) {\n      setCurrClassTitle(selectedClass.title);\n    }\n    try {\n      await fetchStudents(newClassId);\n    } catch (error) {\n      console.error(\"Failed to fetch students:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        padding: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          gutterBottom: true,\n          children: \"Spark Assessment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Select a class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            fullWidth: true,\n            value: currClassId || \"\",\n            onChange: e => {\n              handleClassChange(e.target.value);\n            },\n            children: classTitlesId.map(classItem => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: classItem.classId,\n              children: classItem.title\n            }, classItem.classId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Final Grades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Test, {\n            studentDetails: studentList,\n            classTitleId: [currClassTitle, currClassId]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J/SIliHzbienY+VGy2b/5Gej4c4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Grid","MenuItem","Select","Typography","MY_BU_ID","BASE_API_URL","GET_DEFAULT_HEADERS","Test","App","currClassId","setCurrClassId","currClassTitle","setCurrClassTitle","classList","setClassList","classTitlesId","setClassTitlesId","studentList","setStudentList","fetchClasses","res","fetch","method","headers","ok","Error","status","classes","json","transformedClasses","map","item","classId","title","error","console","fetchStudents","response","students","studentDetailsPromises","student","fetchStudentDetails","studentDetails","Promise","all","filter","detail","studentId","handleClassChange","newClassId","selectedClass","find","classItem","width","height","padding","e","target","value"],"sources":["/Users/jiasonghuang/Desktop/cs519_diagnostic/diagnostic-test-Yuckly/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Unstable_Grid2\";\nimport { MenuItem, Select, Typography } from \"@mui/material\";\n/**\n * You will find globals from this file useful!\n */\nimport { MY_BU_ID, BASE_API_URL, GET_DEFAULT_HEADERS } from \"./globals\";\nimport { IUniversityClass,IStudentDetail } from \"./types/api_types\";\n\nimport { Test } from \"./components/Test\";\n\nfunction App() {\n  // You will need to use more of these!\n  const [currClassId, setCurrClassId] = useState<string>(\"\");\n  const [currClassTitle, setCurrClassTitle] = useState<string>(\"\");\n\n  const [classList, setClassList] = useState<IUniversityClass[]>([]);\n\n  const [classTitlesId, setClassTitlesId] = useState<\n    { classId: string; title: string }[]\n  >([]);\n  const [studentList, setStudentList] = useState<IStudentDetail[]>([]);\n  /**\n   * This is JUST an example of how you might fetch some data(with a different API).\n   * As you might notice, this does not show up in your console right now.\n   * This is because the function isn't called by anything!\n   *\n   * You will need to lookup how to fetch data from an API using React.js\n   * Something you might want to look at is the useEffect hook.\n   *\n   * The useEffect hook will be useful for populating the data in the dropdown box.\n   * You will want to make sure that the effect is only called once at component mount.\n   *\n   * You will also need to explore the use of async/await.\n   *\n   */\n\n  const fetchClasses = async () => {\n    try {\n      const res = await fetch(\n        `${BASE_API_URL}/class/listBySemester/fall2022?buid=${MY_BU_ID}`,\n        {\n          method: \"GET\",\n          headers: GET_DEFAULT_HEADERS(),\n        }\n      );\n      if (!res.ok) {\n        throw new Error(`Error: ${res.status}`);\n      }\n      const classes: IUniversityClass[] = await res.json();\n      const transformedClasses = classes.map((item) => ({\n        classId: item.classId,\n        title: item.title,\n      }));\n      setClassTitlesId(transformedClasses);\n    } catch (error) {\n      console.error(\"Failed to fetch class data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  useEffect(() => {\n    if (currClassId) {\n      fetchStudents(currClassId);\n    }\n  }, [currClassId]);\n\n  const fetchStudents = async (classId: string) => {\n    try {\n        const response = await fetch(\n            `${BASE_API_URL}/class/listStudents/${classId}?buid=${MY_BU_ID}`,\n            {\n                method: \"GET\",\n                headers: GET_DEFAULT_HEADERS(),\n            }\n        );\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status}`);\n        }\n        const students: string[] = await response.json();\n        const studentDetailsPromises = students.map((student: string) =>\n            fetchStudentDetails(student)\n        );\n\n        const studentDetails = await Promise.all(studentDetailsPromises);\n        setStudentList(studentDetails.filter(detail => detail !== null));\n\n    } catch (error) {\n        console.error(\"Failed to fetch students enrolled in class:\", error);\n    }\n};\n  const fetchStudentDetails = async (studentId:string) => {\n    try {\n      const response = await fetch(\n        `${BASE_API_URL}/student/GetById/${studentId}?buid=${MY_BU_ID}`,\n        {\n          method: \"GET\",\n          headers: GET_DEFAULT_HEADERS(),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const studentDetails = await response.json();\n      return studentDetails;\n    } catch (error) {\n      console.error(\"Failed to fetch student information:\", error);\n      return null;\n    }\n  };\n  \n\n\n  const handleClassChange = async (newClassId: string) => {\n    setCurrClassId(newClassId);\n\n    const selectedClass = classTitlesId.find(\n      (classItem) => classItem.classId === newClassId\n    );\n    if (selectedClass) {\n      setCurrClassTitle(selectedClass.title);\n    }\n\n    try {\n      await fetchStudents(newClassId);\n    } catch (error) {\n      console.error(\"Failed to fetch students:\", error);\n    }\n  };\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <Grid container spacing={2} style={{ padding: \"1rem\" }}>\n        <Grid xs={12} container alignItems=\"center\" justifyContent=\"center\">\n          <Typography variant=\"h2\" gutterBottom>\n            Spark Assessment\n          </Typography>\n        </Grid>\n        <Grid xs={12} md={4}>\n          <Typography variant=\"h4\" gutterBottom>\n            Select a class\n          </Typography>\n          <div style={{ width: \"100%\" }}>\n            <Select\n              fullWidth={true}\n              value={currClassId || \"\"}\n              onChange={(e) => {\n                handleClassChange(e.target.value);\n              }}\n            >\n              {classTitlesId.map((classItem) => (\n                <MenuItem key={classItem.classId} value={classItem.classId}>\n                  {classItem.title}\n                </MenuItem>\n              ))}\n            </Select>\n          </div>\n        </Grid>\n        <Grid xs={12} md={8}>\n          <Typography variant=\"h4\" gutterBottom>\n            Final Grades\n          </Typography>\n          <div>\n            <Test studentDetails={studentList} classTitleId={[currClassTitle,currClassId]}/>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}